//created on: Feb 21, 2018
package DuckAirlinesRules

//list any import classes here.

import com.duckair.rule.facts.FlightMetadata;
import com.duckair.rule.facts.FlightError;

//declare any global variables here


rule "Aircraft Has Range"

	salience 0

    when
        //conditions
        $metadata : FlightMetadata(distanceOfFlight > aircraftRange)
    then
        //actions
        FlightError flightError = new FlightError();
        flightError.setErrorReason("This aircraft does not have the "
        + "range to make the flight. The distance of the flight is "
        + $metadata.getDistanceOfFlight() + " and the aircraft can "
        + "only fly " + $metadata.getAircraftRange() + " miles.");
        insertLogical(flightError);
end

rule "Runway Is Long Enough for Takeoff"
    
    salience 0
    
    when
    	$metadata : FlightMetadata(
    			aircraftTakeoffRoll > originatingAirportRunwayLength)
    			
    then
        FlightError flightError = new FlightError();
        flightError.setErrorReason("The runway is too short for "
        + "this aircraft to takeoff. The plan needs "
        + $metadata.getAircraftTakeoffRoll() + " feet to take "
        + "off and the runway is "
        + $metadata.getOriginatingAirportRunwayLength()
        + " feet long.");
        insertLogical(flightError);
end

rule "Runway Is Long Enough For Landing"

	salience 0
	
	when
		$metadata : FlightMetadata(
				aircraftLandingRollout > destinationAirportRunwayLength)
	
	then
		FlightError flightError = new FlightError();
		flightError.setErrorReason("The runway is too short for "
		+ "this aircraft to land. The plane needs "
		+ $metadata.getAircraftLandingRollout()
		+ " feet to land and the runway is "
		+ $metadata.getOriginatingAirportRunwayLength()
		+ " feet long.");
		insertLogical(flightError);		
end

rule "Pilot Has Rating For Aircraft"

	salience 0
	
	when
		$metadata : FlightMetadata(aircraftType != pilotRating)
	then
		FlightError flightError = new FlightError();
		FlightError.setErrorReason("The pilot does not have "
		+ "the license to fly this plane. Tjhe plane is a "
		+ $metadata.getAircraftType() + " and the pilot is "
		+ "rated for a " + $metadata.getPilotRating());
		insertLogical(flightError);
end